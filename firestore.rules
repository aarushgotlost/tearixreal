rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId || 
        exists(/databases/$(database)/documents/users/$(request.auth.uid))
      );
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chats collection
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
    }
    
    // Messages collection
    match /messages/{messageId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == resource.data.senderId || 
        request.auth.uid == resource.data.receiverId
      );
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
    }
    
    // Status collection
    match /status/{statusId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(resource.data.userId));
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Calls collection
    match /calls/{callId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == resource.data.callerId || 
        request.auth.uid == resource.data.receiverId
      );
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.callerId;
    }
  }
} 